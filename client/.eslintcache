[{"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\index.js":"1","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\App.js":"2","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\StoreContext.js":"3","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\components\\ProductComponent.js":"4","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\store.js":"5","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\actions.js":"6","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\reducers.js":"7","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\mutations.js":"8","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\queries.js":"9","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\components\\ProductList.jsx":"10"},{"size":504,"mtime":1676525214056,"results":"11","hashOfConfig":"12"},{"size":1269,"mtime":1676922165687,"results":"13","hashOfConfig":"12"},{"size":311,"mtime":1675973033007,"results":"14","hashOfConfig":"12"},{"size":2468,"mtime":1676658023454,"results":"15","hashOfConfig":"12"},{"size":223,"mtime":1675973238647,"results":"16","hashOfConfig":"12"},{"size":334,"mtime":1676922117737,"results":"17","hashOfConfig":"12"},{"size":1697,"mtime":1676667105730,"results":"18","hashOfConfig":"12"},{"size":651,"mtime":1676667111527,"results":"19","hashOfConfig":"12"},{"size":354,"mtime":1676922214758,"results":"20","hashOfConfig":"12"},{"size":5214,"mtime":1676921325140,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1p3jkva",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\index.js",[],["46","47"],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\App.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\StoreContext.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\components\\ProductComponent.js",["48","49","50"],"import React, { useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport {useMutation} from '@apollo/client'\nimport { CREATE_PRODUCT } from '../utils/mutations';\nimport ProductList from './ProductList'\n\nconst initialState={\n  name:'',\n  type:'',\n  quantity:0\n}\n\nexport default function ProductComponent() {\n  // const dispatch = useDispatch();\n  // const {product} = useSelector((state) => state);\n  const [product, setProduct] = useState(initialState)\n\n  const [createProduct, { data, loading, error }] = useMutation(CREATE_PRODUCT)\n\n  console.log(product)\n  const handleAddProduct = () =>{\n                try {\n                  createProduct({\n                    variables:{productInput:{ \n                      name:product.name.toString(),\n                      type:product.type.toString(),\n                      quantity:Number(product.quantity),\n                    }\n                  },\n                });\n            } catch (err) {\n              console.error(err);\n            }\n                setProduct(initialState)\n  }\n\n  const handleChange = (e) =>{\n    e.preventDefault()\n    const {name:prop, value} = e.target\n    setProduct({...product, [prop]:value})\n  }\n\n\n\n  return (\n    <>\n    <div style={{background:'\t#90a7d5', textAlign:'center'}} className='p-2'> \n      <h1>Digital Store Inventory</h1>\n      <section className=\"product-input\" >\n        <div>\n          <div className=\"add-product py-2\">\n            Add a Product:\n            <input\n              className='mx-2'\n              name='name'\n              value={product.name}\n              onChange={(e) => handleChange(e)}\n              placeholder=\"New Product name...\"\n              type=\"text\"\n            />\n            <input\n              className='mx-2'\n              name='type'\n              value={product.type}\n              onChange={(e) => handleChange(e)}\n              placeholder=\"New Product type...\"\n              type=\"text\"\n            />\n            <input\n              className='mx-2'\n              name='quantity'\n              value={product.quantity}\n              onChange={(e) => handleChange(e)}\n              placeholder=\"New Product quantity...\"\n              type=\"number\"\n            />\n            <button\n              onClick={() =>handleAddProduct() }\n            >\n              Add Product\n            </button>\n          </div>\n        </div>\n      </section>\n    </div>\n      <ProductList/>\n    </>\n  );\n}\n","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\store.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\actions.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\reducers.js",["51","52"],"import { ADD_PRODUCT, EDIT_PRODUCT, SET_PRODUCT } from '../utils/actions';\n\nconst randomNum = () => Math.floor(Math.random() * 20000);\n\n// Notice we moved the initial state object from our ProductComponent to the reducer itself\nconst initialState = {\n  product: {\n    name:'',\n    type:'',\n    quantity:0,\n    onHold:false\n  }\n}\n\n// Here we pass a default value of initialState if none is provided\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PRODUCT: {\n      if(action.payload ===null) {\n        return state\n      }\n      else return state.product = action.payload\n      \n    }\n    // case START_PRODUCT: {\n    //   const productIndex = state.products.findIndex((product) => product.id === action.payload);\n    //   const updatedProduct = { ...state.products[productIndex], onHold: true };\n\n    //   const productsCopy = [...state.products];\n    //   productsCopy[productIndex] = updatedProduct;\n\n    //   return {\n    //     ...state,\n    //     products: productsCopy,\n    //   };\n    // }\n    // case STOP_PRODUCT: {\n    //   const productIndex = state.products.findIndex((product) => product.id === action.payload);\n    //   const updatedProduct = { ...state.products[productIndex], onHold: false };\n\n    //   const productsCopy = [...state.products];\n    //   productsCopy[productIndex] = updatedProduct;\n\n    //   return {\n    //     ...state,\n    //     products: productsCopy,\n    //   };\n    // }\n    case EDIT_PRODUCT: {\n      console.log(action)\n      const {prop, value} = action.variables\n      console.log(state.product.name)\n      return {...state.product[prop]=value} \n    }\n    default: {\n      return state;\n    }\n  }\n}\n","C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\mutations.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\utils\\queries.js",[],"C:\\Users\\dczer\\Desktop\\web-dev-work\\MERN_store\\client\\src\\components\\ProductList.jsx",["53","54","55","56"],"import React, {useState} from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { EDIT_PRODUCT } from './../utils/mutations';\r\nimport { useDispatch } from 'react-redux';\r\n// import { EDIT_PRODUCT } from '../utils/actions';\r\n\r\n\r\nexport default function ProductList() {\r\n  // const dispatch = useDispatch()\r\n  const [selectedProduct, setSelectedProduct] = useState({})\r\n  // const [editQuantity, { error ,loading}]= useMutation(EDIT_QUANTITY)\r\n  const [editProduct, { error ,loading}]= useMutation(EDIT_PRODUCT)\r\n  const { loading:queryloading, data:query }  = useQuery(QUERY_PRODUCTS,{\r\n    pollInterval: 500,\r\n  })\r\nconsole.log(query)\r\n// console.log(props)\r\nconsole.log(selectedProduct)\r\n\r\n\r\nconst handleEditProduct = (e) =>{\r\ne.preventDefault()\r\n  let {name, value} = e.target\r\n  console.log(name, value)\r\n  if(name==='quantity') value = Number(value)\r\n  if(name==='onHold')value=!(value==='true')\r\n  setSelectedProduct({...selectedProduct, [name]:value})\r\n}\r\n\r\nconst toggleEdit = (e, product)=>{\r\n  e.preventDefault()\r\n  setSelectedProduct({...product})\r\n}\r\n\r\nconst handleDeleteProduct = (e)=>{\r\n  e.preventDefault()\r\n\r\n}\r\n\r\nconst handleSubmit = (e)=>{\r\n  e.preventDefault()\r\n  const {__typename, _id, ...productInput}= selectedProduct\r\n  try {\r\n    editProduct({\r\n      variables:{\r\n        id: selectedProduct._id,\r\n        productInput: productInput\r\n      }\r\n  });\r\n} catch (err) {\r\nconsole.error('err: ',err);\r\n}\r\n  setSelectedProduct({})\r\n}\r\n\r\n  return (\r\n    <section className=\"product-list p-2\" style={{display:'flex', flexDirection:'column', alignItems:'center' }}>\r\n        {query?.getProducts?.map((product) => (\r\n          <div key={product._id} id={product._id} style={{textAlign:'center'}} className=\"card bg-light col-md-6 mb-3\">\r\n            {product._id===selectedProduct._id? (<> \r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              edit product</h4>\r\n              <form id='editProduct' style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                <fieldset style={{border:'none'}}> \r\n                <label htmlFor=\"name\">name:&nbsp;</label>\r\n               <input type=\"text\" placeholder='name' name=\"name\" id={product.id} defaultValue={product.name} value={selectedProduct.name} onChange={(e)=>{\r\n                  handleEditProduct(e)\r\n                }}/>\r\n                </fieldset>\r\n                <fieldset style={{border:'none'}}> \r\n                <label htmlFor=\"type\">type:&nbsp;</label>\r\n                <input type=\"text\" placeholder='type' name=\"type\" id={product.id} defaultValue={product.type} value = {selectedProduct.type} onChange={(e)=>{\r\n                  handleEditProduct(e)\r\n                }}/>\r\n                </fieldset>\r\n                <fieldset style={{border:'none'}}>\r\n                <label htmlFor=\"quantity\">quantity:&nbsp;</label>\r\n                <input type='number' placeholder='quantity' name=\"quantity\" id={product.id}  defaultValue={product.quantity} value = {selectedProduct.quantity}  onChange={(e)=>{\r\n                  handleEditProduct(e)\r\n                }}/>\r\n                </fieldset>\r\n                <span style={{ fontSize: '1rem' }}>\r\n              <button\r\n              className='mt-2'\r\n                // id=\"onHold\"\r\n                name='onHold'\r\n                defaultValue={product.onHold} value = {selectedProduct.onHold} \r\n                onClick={e=>handleEditProduct(e)}\r\n                >\r\n                Toggle Hold\r\n              </button>\r\n              {selectedProduct?.onHold ? 'Available✅' : 'On Hold ⚠️ ' }\r\n            </span>\r\n              <button className='m-2' onClick={(e)=>{handleSubmit(e)}}>submit</button>\r\n              <button className='mb-2' onClick={()=>setSelectedProduct({})}>cancel</button>\r\n              </form>\r\n            </>\r\n            ): (<> \r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              <span> \r\n              {product.name} <br />\r\n              <span style={{ fontSize: '1rem' }}>\r\n                Quantity: {product.quantity } \r\n                {/* <input type='number'name='quantity' max={999} value={product.quantity} onChange={e=>handleEditProduct(e, product.id)}/> */}\r\n              </span>\r\n              <button onClick={(e)=>toggleEdit(e,product)}/>\r\n\r\n              </span>\r\n            </h4>\r\n            <div className=\"card-body bg-light mx-2 wt-2\">\r\n              <p>Type: {product.type}</p>\r\n              <code>\r\n                Product ID:\r\n                {product.id}\r\n              </code>\r\n              <br/>\r\n            <span style={{ fontSize: '1rem' }}>\r\n              {product?.onHold ? 'Available✅' : 'On Hold ⚠️ ' }\r\n            </span>\r\n            <br/>\r\n              <button className='mt-2'\r\n                // id=\"onHold\"\r\n                name='delete'\r\n                value= {product.id}\r\n                onClick={e=>handleDeleteProduct(e)}\r\n                >\r\n                delete\r\n              </button>\r\n            </div>\r\n                </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </section>\r\n  )\r\n}\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":18,"column":27,"nodeType":"63","messageId":"64","endLine":18,"endColumn":31},{"ruleId":"61","severity":1,"message":"65","line":18,"column":33,"nodeType":"63","messageId":"64","endLine":18,"endColumn":40},{"ruleId":"61","severity":1,"message":"66","line":18,"column":42,"nodeType":"63","messageId":"64","endLine":18,"endColumn":47},{"ruleId":"61","severity":1,"message":"67","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":21},{"ruleId":"61","severity":1,"message":"68","line":3,"column":7,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"69","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":13,"column":25,"nodeType":"63","messageId":"64","endLine":13,"endColumn":30},{"ruleId":"61","severity":1,"message":"65","line":13,"column":32,"nodeType":"63","messageId":"64","endLine":13,"endColumn":39},{"ruleId":"61","severity":1,"message":"70","line":14,"column":19,"nodeType":"63","messageId":"64","endLine":14,"endColumn":31},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'ADD_PRODUCT' is defined but never used.","'randomNum' is assigned a value but never used.","'useDispatch' is defined but never used.","'queryloading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]